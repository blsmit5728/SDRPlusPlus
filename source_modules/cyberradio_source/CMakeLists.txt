cmake_minimum_required(VERSION 3.13)
if (MSVC)
    message(STATUS "CyberRadio Source Not supported in MSVC")
elseif(MSVC)
    project(cyberradio_source)
    file(GLOB SRC "src/*.cpp")
    add_library(cyberradio_source SHARED ${SRC})
    target_link_libraries(cyberradio_source PRIVATE sdrpp_core)
    set_target_properties(cyberradio_source PROPERTIES PREFIX "")
    target_include_directories(cyberradio_source PRIVATE "src/")
    target_compile_options(cyberradio_source PRIVATE -std=c++17)
    find_package(LibCyberRadio REQUIRED)
    message(STATUS "LIBCYBERRADIO_FOUND=${LIBCYBERRADIO_FOUND}")
    message(STATUS "LIBCYBERRADIO_INCLUDE_DIR=${LIBCYBERRADIO_INCLUDE_DIR}")
    message(STATUS "LIBCYBERRADIO_LIB_DIR=${LIBCYBERRADIO_LIB_DIR}")
    message(STATUS "LIBCYBERRADIO_LIB=${LIBCYBERRADIO_LIB}")

    #find_package(LibG3ZCopy REQUIRED)
    #message(STATUS "LIBG3ZCOPY_FOUND=${LIBG3ZCOPY_LIB}")
    #message(STATUS "LIBG3ZCOPY_INCLUDE_DIR=${LIBG3ZCOPY_INCLUDE_DIR}")
    #message(STATUS "LIBG3ZCOPY_LIB_DIR=${LIBG3ZCOPY_LIB_DIR}")
    #message(STATUS "LIBG3ZCOPY_LIB=${LIBG3ZCOPY_LIB}")

    #find_package(PkgConfig)
    #pkg_check_modules(LibCyberRadio REQUIRED cyberradio)
    target_include_directories(cyberradio_source PRIVATE ${LIBCYBERRADIO_INCLUDE_DIR})
    target_link_directories(cyberradio_source PRIVATE ${LIBCYBERRADIO_LIB_DIR})
    target_link_libraries(cyberradio_source PRIVATE ${LIBCYBERRADIO_LIB})
    # Install directives
    install(TARGETS cyberradio_source DESTINATION lib/sdrpp/plugins)
endif(MSVC)